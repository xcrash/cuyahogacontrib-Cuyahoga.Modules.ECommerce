using System;
using System.Collections;

using Cuyahoga.Core.Domain;

using Cuyahoga.Modules.ECommerce.Util;
using Cuyahoga.Modules.ECommerce.Util.Interfaces;
using Cuyahoga.Modules.ECommerce.Util.Enums;
using Cuyahoga.Modules.ECommerce.Util.Location;

namespace Cuyahoga.Modules.ECommerce.Domain {

    /// <summary>
    ///	Generated by MyGeneration using the Serdar's NHibernate Object Mapping 1.1 template (based on Gustavo's) - serdar@argelab.net
    /// </summary>
    [Serializable]
    public class OrderHeader : IOrderHeader {

        #region Private Members
        private bool _isChanged;
        private bool _isDeleted;
        private long _orderHeaderID;
        private string _purchaseordernumber;
        private short _orderstatusid;
        private short _paymentmethodid;
        private DateTime _ordereddate;
        private Address _invoiceAddress;
        private Address _deliveryAddress;
        private DeliveryType _deliverytypeid;
        private string _comment;
        private DateTime _inserttimestamp;
        private DateTime _updatetimestamp;
       
        #endregion


        public OrderHeader() {
            _orderHeaderID = 0;
            _purchaseordernumber = StringUtils.GenerateRandomText(16);
            _orderstatusid = (short) Util.Enums.OrderStatus.Basket;
            _ordereddate = DateTime.Now;
            _invoiceAddress = null;
            _deliveryAddress = null;
            _deliverytypeid = null;
            _comment = null;
            _inserttimestamp = DateTime.Now;
            _updatetimestamp = DateTime.Now;
           
        }

        #region Internal Accessors for NHibernate

        /// <summary>
        /// 
        /// </summary>
        protected internal virtual string _PurchaseOrderNumber {
            get { return _purchaseordernumber; }
            set { _purchaseordernumber = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected internal virtual short _OrderStatusID {
            get { return _orderstatusid; }
            set { _orderstatusid = value; }
        }

        protected internal virtual short _PaymentMethodID {
            get { return _paymentmethodid; }
            set { _isChanged |= (_paymentmethodid != value); _paymentmethodid = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected internal virtual DateTime _OrderedDate {
            get { return _ordereddate; }
            set { _ordereddate = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected internal virtual Address _InvoiceAddress {
            get { return _invoiceAddress; }
            set { _invoiceAddress = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected internal virtual Address _DeliveryAddress {
            get { return _deliveryAddress; }
            set { _deliveryAddress = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected internal virtual DeliveryType _DeliveryTypeid {
            get { return _deliverytypeid; }
            set { _deliverytypeid = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected internal virtual string _Comment {
            get { return _comment; }
            set { _comment = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected internal virtual DateTime _Inserttimestamp {
            get { return _inserttimestamp; }
            set { _inserttimestamp = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        protected internal virtual DateTime _Updatetimestamp {
            get { return _updatetimestamp; }
            set { _updatetimestamp = value; }
        }

        #endregion // Internal Accessors for NHibernate

        #region Public Properties

        /// <summary>
        /// 
        /// </summary>		
        public virtual string PurchaseOrderNumber {
            get { return _purchaseordernumber; }
            set {
                if (value != null)
                    if (value.Length > 50)
                        throw new ArgumentOutOfRangeException("Invalid value for PurchaseOrderNumber", value, value.ToString());

                _isChanged |= (_purchaseordernumber != value); _purchaseordernumber = value;
            }
        }

        public virtual Util.Enums.OrderStatus Status {
            get { return (Util.Enums.OrderStatus) _OrderStatusID; }
            set { _OrderStatusID = (short)value; }
        }



        /// <summary>
        /// 
        /// </summary>		
        public virtual DateTime OrderedDate {
            get { return _ordereddate; }
            set { _isChanged |= (_ordereddate != value); _ordereddate = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual IAddress InvoiceAddress {
            get { return _invoiceAddress; }
            set { _isChanged |= (_invoiceAddress != value); _invoiceAddress = value as Address; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual IAddress DeliveryAddress {
            get { return _deliveryAddress; }
            set { _isChanged |= (_deliveryAddress != value); _deliveryAddress = value as Address; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual DeliveryType DeliveryType {
            get { return _deliverytypeid; }
            set { _isChanged |= (_deliverytypeid != value); _deliverytypeid = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual string Comment {
            get { return _comment; }
            set {
                if (value != null)
                    if (value.Length > 512)
                        throw new ArgumentOutOfRangeException("Invalid value for Comment", value, value.ToString());

                _isChanged |= (_comment != value); _comment = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual DateTime CreatedDate {
            get { return _inserttimestamp; }
            set { _isChanged |= (_inserttimestamp != value); _inserttimestamp = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual DateTime ModifiedDate {
            get { return _updatetimestamp; }
            set { _isChanged |= (_updatetimestamp != value); _updatetimestamp = value; }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public virtual bool IsChanged {
            get { return _isChanged; }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public virtual bool IsDeleted {
            get { return _isDeleted; }
        }

        #endregion

        #region Public Functions

        /// <summary>
        /// mark the item as deleted
        /// </summary>
        public virtual void MarkAsDeleted() {
            _isDeleted = true;
            _isChanged = true;
        }


        #endregion

        #region Equals And HashCode Overrides
        /// <summary>
        /// local implementation of Equals based on unique value members
        /// </summary>
        public override bool Equals(object obj) {
            if (this == obj) return true;
            if ((obj == null) || (obj.GetType() != this.GetType())) return false;
            OrderHeader castObj = (OrderHeader)obj;
            return (castObj != null) &&
                (this._orderHeaderID == castObj.OrderHeaderID);
        }

        /// <summary>
        /// local implementation of GetHashCode based on unique value members
        /// </summary>
        public override int GetHashCode() {
            int hash = 57;
            hash = 27 * hash * _orderHeaderID.GetHashCode();
            return hash;
        }
        #endregion
        
        #region IGenericOrderHeader Members

        public virtual long OrderHeaderID {
            get {
                return _orderHeaderID;
            }
            set {
                _orderHeaderID = value;
            }
        }

        public virtual PaymentMethodType PaymentMethod {
            get {
                return (PaymentMethodType)_paymentmethodid;
            }
            set {
                _paymentmethodid = (short) value;
            }
        }
        #endregion
    }
}