using System;
using System.Collections;
using Cuyahoga.Modules.ECommerce.Util.Location;

namespace Cuyahoga.Modules.ECommerce.Domain {

    /// <summary>
    ///	Generated by MyGeneration using the Serdar's NHibernate Object Mapping 1.1 template (based on Gustavo's) - serdar@argelab.net
    /// </summary>
    [Serializable]
    public class Address : IAddress {

        #region Private Members
        private bool _isChanged;
        private bool _isDeleted;
        private long _addressid;
        private bool _isdeleted;
        private string _contactname;
        private string _addressline1;
        private string _addressline2;
        private string _addressline3;
        private string _state;
        private Country _country;
        private string _countryCode;
        private string _postcode;
        private string _county;
        private State _stateid;
        private DateTime _inserttimestamp;
        private DateTime _updatetimestamp;

        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public Address() {
            _addressid = 0;
            _isdeleted = false;
            _contactname = null;
            _addressline1 = null;
            _addressline2 = null;
            _addressline3 = null;
            _state = null;
            _country = null;
            _postcode = null;
            _county = null;
            _stateid = null;
            _inserttimestamp = DateTime.Now;
            _updatetimestamp = DateTime.Now;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Internal Accessors for NHibernate

        /// <summary>
        /// 
        /// </summary>
        internal virtual long _Addressid {
            get { return _addressid; }
            set { _addressid = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual bool _IsDeleted {
            get { return _isdeleted; }
            set { _isdeleted = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual string _ContactName {
            get { return _contactname; }
            set { _contactname = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual string _AddressLine1 {
            get { return _addressline1; }
            set { _addressline1 = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual string _AddressLine2 {
            get { return _addressline2; }
            set { _addressline2 = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual string _AddressLine3 {
            get { return _addressline3; }
            set { _addressline3 = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual string _State {
            get { return _state; }
            set { _state = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual string _CountryCode {
            get { return _countryCode; }
            set { _countryCode = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual string _PostCode {
            get { return _postcode; }
            set { _postcode = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual string _County {
            get { return _county; }
            set { _county = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual State _Stateid {
            get { return _stateid; }
            set { _stateid = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual DateTime _Inserttimestamp {
            get { return _inserttimestamp; }
            set { _inserttimestamp = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual DateTime _Updatetimestamp {
            get { return _updatetimestamp; }
            set { _updatetimestamp = value; }
        }

        #endregion // Internal Accessors for NHibernate

        #region Public Properties

        /// <summary>
        /// 
        /// </summary>		
        public virtual long AddressID {
            get { return _addressid; }
            set { _isChanged |= (_addressid != value); _addressid = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual bool IsDeleted {
            get { return _isdeleted; }
            set { _isChanged |= (_isdeleted != value); _isdeleted = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual string ContactName {
            get { return _contactname; }
            set {
                if (value != null)
                    if (value.Length > 128)
                        throw new ArgumentOutOfRangeException("Invalid value for ContactName", value, value.ToString());

                _isChanged |= (_contactname != value); _contactname = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual string AddressLine1 {
            get { return _addressline1; }
            set {
                if (value != null)
                    if (value.Length > 50)
                        throw new ArgumentOutOfRangeException("Invalid value for AddressLine1", value, value.ToString());

                _isChanged |= (_addressline1 != value); _addressline1 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual string AddressLine2 {
            get { return _addressline2; }
            set {
                if (value != null)
                    if (value.Length > 50)
                        throw new ArgumentOutOfRangeException("Invalid value for AddressLine2", value, value.ToString());

                _isChanged |= (_addressline2 != value); _addressline2 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual string AddressLine3 {
            get { return _addressline3; }
            set {
                if (value != null)
                    if (value.Length > 50)
                        throw new ArgumentOutOfRangeException("Invalid value for AddressLine3", value, value.ToString());

                _isChanged |= (_addressline3 != value); _addressline3 = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual string State {
            get { return _state; }
            set {
                if (value != null)
                    if (value.Length > 50)
                        throw new ArgumentOutOfRangeException("Invalid value for State", value, value.ToString());

                _isChanged |= (_state != value); _state = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual Country Country {
            get { return _country; }
            set { _isChanged |= (_country != value); _country = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual string Postcode {
            get { return _postcode; }
            set {
                if (value != null)
                    if (value.Length > 50)
                        throw new ArgumentOutOfRangeException("Invalid value for PostCode", value, value.ToString());

                _isChanged |= (_postcode != value); _postcode = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual string County {
            get { return _county; }
            set {
                if (value != null)
                    if (value.Length > 50)
                        throw new ArgumentOutOfRangeException("Invalid value for County", value, value.ToString());

                _isChanged |= (_county != value); _county = value;
            }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual State StateID {
            get { return _stateid; }
            set { _isChanged |= (_stateid != value); _stateid = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual DateTime InsertTimestamp {
            get { return _inserttimestamp; }
            set { _isChanged |= (_inserttimestamp != value); _inserttimestamp = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual DateTime UpdateTimestamp {
            get { return _updatetimestamp; }
            set { _isChanged |= (_updatetimestamp != value); _updatetimestamp = value; }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public virtual bool IsChanged {
            get { return _isChanged; }
        }
        #endregion

        #region Public Functions

        /// <summary>
        /// mark the item as deleted
        /// </summary>
        public virtual void MarkAsDeleted() {
            _isDeleted = true;
            _isChanged = true;
        }


        #endregion

        #region Equals And HashCode Overrides
        /// <summary>
        /// local implementation of Equals based on unique value members
        /// </summary>
        public override bool Equals(object obj) {
            if (this == obj) return true;
            if ((obj == null) || (obj.GetType() != this.GetType())) return false;
            Address castObj = (Address)obj;
            return (castObj != null) &&
                (this._addressid == castObj.AddressID);
        }

        /// <summary>
        /// local implementation of GetHashCode based on unique value members
        /// </summary>
        public override int GetHashCode() {

            int hash = 57;
            hash = 27 * hash * _addressid.GetHashCode();
            return hash;
        }
        #endregion

        #region IAddress Members


        public string City {
            get {
                return County;
            }
            set {
                County = value;
            }
        }

        public string Region {
            get {
                return State;
            }
            set {
                State = value;
            }
        }

        public string CountryCode {
            get {
                return _CountryCode;
            }
            set {
                _CountryCode = value;
            }
        }

        #endregion
    }
}