using System;
using System.Collections;
using Cuyahoga.Modules.ECommerce.Domain.Catalogue.Interfaces;

namespace Cuyahoga.Modules.ECommerce.Domain {

    /// <summary>
    ///	Generated by MyGeneration using the Serdar's NHibernate Object Mapping 1.1 template (based on Gustavo's) - serdar@argelab.net
    /// </summary>
    [Serializable]
    public class ProductRelation {

        #region Private Members
        private bool _isChanged;
        private bool _isDeleted;
        private long _productid;
        private long _parentid;
        private RelationType _relationtypeid;
        private DateTime _inserttimestamp;
        private DateTime _updatetimestamp;
        private Product _product;

        #endregion

        #region Default ( Empty ) Class Constuctor
        /// <summary>
        /// default constructor
        /// </summary>
        public ProductRelation() {
            _productid = 0;
            _parentid = 0;
            _relationtypeid = null;
            _inserttimestamp = DateTime.Now;
            _updatetimestamp = DateTime.Now;
        }
        #endregion // End of Default ( Empty ) Class Constuctor

        #region Internal Accessors for NHibernate

        /// <summary>
        /// 
        /// </summary>
        internal virtual long _Productid {
            get { return _productid; }
            set { _productid = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual long _Parentid {
            get { return _parentid; }
            set { _parentid = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual RelationType _RelationTypeid {
            get { return _relationtypeid; }
            set { _relationtypeid = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual DateTime _Inserttimestamp {
            get { return _inserttimestamp; }
            set { _inserttimestamp = value; }
        }

        /// <summary>
        /// 
        /// </summary>
        internal virtual DateTime _Updatetimestamp {
            get { return _updatetimestamp; }
            set { _updatetimestamp = value; }
        }

        #endregion // Internal Accessors for NHibernate

        #region Public Properties

        public virtual Product Product {
            get { return _product; }
            set { _isChanged |= (_product != value); _product = value; }
        }


        /// <summary>
        /// 
        /// </summary>		
        public virtual long ProductID {
            get { return _productid; }
            set { _isChanged |= (_productid != value); _productid = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual long ParentID {
            get { return _parentid; }
            set { _isChanged |= (_parentid != value); _parentid = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual RelationType RelationType {
            get { return _relationtypeid; }
            set { _isChanged |= (_relationtypeid != value); _relationtypeid = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual DateTime InsertTimestamp {
            get { return _inserttimestamp; }
            set { _isChanged |= (_inserttimestamp != value); _inserttimestamp = value; }
        }

        /// <summary>
        /// 
        /// </summary>		
        public virtual DateTime UpdateTimestamp {
            get { return _updatetimestamp; }
            set { _isChanged |= (_updatetimestamp != value); _updatetimestamp = value; }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public virtual bool IsChanged {
            get { return _isChanged; }
        }

        /// <summary>
        /// Returns whether or not the object has changed it's values.
        /// </summary>
        public virtual bool IsDeleted {
            get { return _isDeleted; }
        }

        #endregion


        #region Public Functions

        /// <summary>
        /// mark the item as deleted
        /// </summary>
        public virtual void MarkAsDeleted() {
            _isDeleted = true;
            _isChanged = true;
        }


        #endregion


        #region Equals And HashCode Overrides
        /// <summary>
        /// local implementation of Equals based on unique value members
        /// </summary>
        public override bool Equals(object obj) {
            if (this == obj) return true;
            if ((obj == null) || (obj.GetType() != this.GetType())) return false;
            ProductRelation castObj = (ProductRelation)obj;
            return (castObj != null) &&
                (this._productid == castObj.ProductID) &&
                (this._parentid == castObj.ParentID);
        }

        /// <summary>
        /// local implementation of GetHashCode based on unique value members
        /// </summary>
        public override int GetHashCode() {

            int hash = 57;
            hash = 27 * hash * _productid.GetHashCode();
            hash = 27 * hash * _parentid.GetHashCode();
            return hash;
        }
        #endregion
    }
}